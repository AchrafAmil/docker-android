name: Prepare release
on:
  push:
    branches:
    - 'release/**'
jobs:
  job_compute_release_name:
    runs-on: [self-hosted, docker]
    container:
      image: docker://docker:stable-git
      options: --name=runner
    outputs:
      release_name: ${{ steps.step_compute_release_name.outputs.release_name }}
    steps:
      - id: step_compute_release_name
        env:
          GIT_REF: ${{ github.ref }}
        run: echo "::set-output name=release_name::${GIT_REF#refs/heads/release/}"

  job_build_test_deploy_and_generate_desc:
    needs: job_compute_release_name
    runs-on: [self-hosted, docker]
    container:
      image: docker://docker:stable-git
      options: --name=runner
    strategy:
      matrix:
        android_api: [28, 29]
        android_ndk: ["--android_ndk", ""]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build test deploy describe image
        env:
          RELEASE_NAME: ${{ needs.job_compute_release_name.outputs.release_name }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: ./ci_cd.sh --build --test --deploy --desc --android-api ${{ matrix.android_api }} ${{ matrix.android_ndk }}
        # For debug purpose, keep while not stable
        # run: |
          #echo "Building, testing, describing, deloying image..."
          #touch desc.txt
          #echo ${{ matrix.android_api }} ${{ matrix.android_ndk }} > desc.txt

      - id: get_image_name
        env:
          RELEASE_NAME: ${{ needs.job_compute_release_name.outputs.release_name }}
        run: |
          image_name=$(./ci_cd.sh --image-name --android-api ${{ matrix.android_api }} ${{ matrix.android_ndk }})
          echo "::set-output name=image_name::$image_name"

      - name: Rename desc file
        run: mv desc.txt ${{ steps.get_image_name.outputs.image_name }}.txt

      - name: Upload image description
        uses: actions/upload-artifact@v2-preview
        with:
          path: ${{ steps.get_image_name.outputs.image_name }}.txt
          name: images_description

  job_create_release:
    needs: [job_compute_release_name, job_build_test_deploy_and_generate_desc]
    runs-on: [self-hosted, docker]
    container:
      image: docker://docker:stable-git
      options: --name=runner
    steps:
      - name: Create release
        id: step_create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.job_compute_release_name.outputs.release_name }}
          release_name: ${{ needs.job_compute_release_name.outputs.release_name }}
          body: ${{ needs.job_compute_release_name.outputs.release_name }}
          draft: false
          prerelease: false

      - name: Generate changelog file
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN}}

      - name: Upload changelog
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.step_create_release.outputs.upload_url }}
          asset_path: CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/markdown

      - name: Fetch images description
        uses: actions/download-artifact@v2-preview
        with:
          name: images_description
          path: images_description

      - name: Zip images description
        run: zip -r images_description.zip images_description

      - name: Upload images description
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.step_create_release.outputs.upload_url }}
          asset_path: images_description.zip
          asset_name: images_description.zip
          asset_content_type: application/zip
